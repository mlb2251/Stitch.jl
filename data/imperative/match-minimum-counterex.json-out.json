[
    {
        "args": {
            "iterations": 1,
            "application_utility_symvar": -0.5,
            "application_utility_fixed": -3,
            "match_sequences": true,
            "max_arity": 4,
            "dfa": "data_for_testing/dfa_imp.json",
            "application_utility_choicevar": -0.01,
            "application_utility_metavar": -1,
            "size_by_symbol": "data_for_testing/size_by_symbol.json",
            "minimum_number_matches": 6
        },
        "abstractions": [],
        "programs": [
            "(Module (/seq (FunctionDef &f:0 (arguments nil nil None nil nil None nil) (/seq (Assign (list (Name &x:1 Store)) (Constant i2 None) None) (Assign (list (Name &x:1 Store)) (Constant i5 None) None) (Assign (list (Name &x:1 Store)) (BinOp (BinOp (Constant i2 None) Add (Constant i3 None)) Add (Name &x:1 Load)) None)) nil None None) (FunctionDef &g:0 (arguments nil nil None nil nil None nil) (/seq (Assign (list (Name &x:2 Store)) (Constant i5 None) None) (Assign (list (Name &x:2 Store)) (BinOp (BinOp (Constant i2 None) Add (Constant i3 None)) Add (Name &x:2 Load)) None)) nil None None)) nil)",
            "(Module (/seq (FunctionDef &f:0 (arguments nil nil None nil nil None nil) (/seq (Assign (list (Name &x:1 Store)) (Constant i2 None) None) (Assign (list (Name &x:1 Store)) (Constant i5 None) None) (Assign (list (Name &x:1 Store)) (BinOp (BinOp (Constant i2 None) Add (Constant i3 None)) Add (Name &x:1 Load)) None)) nil None None) (FunctionDef &g:0 (arguments nil nil None nil nil None nil) (/seq (Assign (list (Name &x:2 Store)) (Constant i5 None) None) (Assign (list (Name &x:2 Store)) (BinOp (BinOp (Constant i2 None) Add (Constant i3 None)) Add (Name &x:2 Load)) None)) nil None None)) nil)"
        ]
    },
    {
        "args": {
            "iterations": 1,
            "application_utility_symvar": -0.5,
            "application_utility_fixed": -3,
            "match_sequences": true,
            "max_arity": 4,
            "dfa": "data_for_testing/dfa_imp.json",
            "application_utility_choicevar": -0.01,
            "application_utility_metavar": -1,
            "size_by_symbol": "data_for_testing/size_by_symbol.json",
            "minimum_number_matches": 4
        },
        "abstractions": [
            [
                0,
                2,
                "(FunctionDef %2 (arguments nil nil None nil nil None nil) (/seq ?0 (Assign (list (Name %1 Store)) (Constant i5 None) None) (Assign (list (Name %1 Store)) (BinOp (BinOp (Constant i2 None) Add (Constant i3 None)) Add (Name %1 Load)) None)) nil None None)",
                "S",
                [],
                [
                    "Name",
                    "Name"
                ]
            ]
        ],
        "programs": [
            "(Module (/seq (fn_1 &x:1 &f:0 (/choiceseq (Assign (list (Name &x:1 Store)) (Constant i2 None) None))) (fn_1 &x:2 &g:0 (/choiceseq))) nil)",
            "(Module (/seq (fn_1 &x:1 &f:0 (/choiceseq (Assign (list (Name &x:1 Store)) (Constant i2 None) None))) (fn_1 &x:2 &g:0 (/choiceseq))) nil)"
        ]
    }
]
