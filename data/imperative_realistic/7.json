["(Module\n  (/seq\n    (FunctionDef\n      &putin:0\n      (arguments nil nil None nil nil None nil)\n      (/seq\n        (Return\n          (Call\n            (Name g_map Load)\n            (list\n              (_starred_content (Name g_int Load))\n              (_starred_content (Call (Attribute (Call (Name g_input Load) nil nil) s_split Load) nil nil))\n            )\n            nil\n          )\n        )\n      )\n      nil\n      None\n      None\n    )\n    (FunctionDef\n      &sol:0\n      (arguments nil nil None nil nil None nil)\n      (/seq\n        (Assign\n          (list (Name &n:1 Store))\n          (Call (Name g_int Load) (list (_starred_content (Call (Name g_input Load) nil nil))) nil)\n          None\n        )\n        (Assign\n          (list (Name &C:1 Store))\n          (Call (Name g_list Load) (list (_starred_content (Call (Name &putin:0 Load) nil nil))) nil)\n          None\n        )\n        (Assign\n          (list (Name &B:1 Store))\n          (Call (Name g_list Load) (list (_starred_content (Call (Name &putin:0 Load) nil nil))) nil)\n          None\n        )\n        (Assign\n          (list (Name &q:1 Store))\n          (Call (Name g_int Load) (list (_starred_content (Call (Name g_input Load) nil nil))) nil)\n          None\n        )\n        (Assign\n          (list (Name &x:1 Store))\n          (Call (Name g_int Load) (list (_starred_content (Call (Name g_input Load) nil nil))) nil)\n          None\n        )\n        (Assign (list (Name &min_arr:1 Store)) (List (list (_starred_content (Name &x:1 Load))) Load) None)\n        (Assign (list (Name &min_part_sums:1 Store)) (List (list (_starred_content (Name &x:1 Load))) Load) None)\n        (Assign\n          (list (Name &part_sums:1 Store))\n          (List (list (_starred_content (Subscript (Name &C:1 Load) (_slice_content (Constant i0 None)) Load))) Load)\n          None\n        )\n        (For\n          (Name &i:1 Store)\n          (Call\n            (Name g_range Load)\n            (list (_starred_content (Constant i1 None)) (_starred_content (Name &n:1 Load)))\n            nil\n          )\n          (/seq\n            (Expr\n              (Call\n                (Attribute (Name &part_sums:1 Load) s_append Load)\n                (list\n                  (_starred_content\n                    (BinOp\n                      (Subscript (Name &part_sums:1 Load) (_slice_content (UnaryOp USub (Constant i1 None))) Load)\n                      Add\n                      (Subscript (Name &C:1 Load) (_slice_content (Name &i:1 Load)) Load)\n                    )\n                  )\n                )\n                nil\n              )\n            )\n          )\n          (/seq)\n          None\n        )\n        (For\n          (Name &elem:1 Store)\n          (Name &B:1 Load)\n          (/seq\n            (Expr\n              (Call\n                (Attribute (Name &min_arr:1 Load) s_append Load)\n                (list\n                  (_starred_content\n                    (BinOp\n                      (Subscript (Name &min_arr:1 Load) (_slice_content (UnaryOp USub (Constant i1 None))) Load)\n                      Add\n                      (Name &elem:1 Load)\n                    )\n                  )\n                )\n                nil\n              )\n            )\n            (Expr\n              (Call\n                (Attribute (Name &min_part_sums:1 Load) s_append Load)\n                (list\n                  (_starred_content\n                    (BinOp\n                      (Subscript (Name &min_arr:1 Load) (_slice_content (UnaryOp USub (Constant i1 None))) Load)\n                      Add\n                      (Subscript (Name &min_part_sums:1 Load) (_slice_content (UnaryOp USub (Constant i1 None))) Load)\n                    )\n                  )\n                )\n                nil\n              )\n            )\n          )\n          (/seq)\n          None\n        )\n        (For\n          (Name &i:1 Store)\n          (Call (Name g_range Load) (list (_starred_content (Name &n:1 Load))) nil)\n          (/seq\n            (If\n              (Compare\n                (Subscript (Name &min_part_sums:1 Load) (_slice_content (Name &i:1 Load)) Load)\n                (list Gt)\n                (list (Subscript (Name &part_sums:1 Load) (_slice_content (Name &i:1 Load)) Load))\n              )\n              (/seq (Return (Constant i0 None)))\n              (/seq)\n            )\n          )\n          (/seq)\n          None\n        )\n        (If\n          (Compare\n            (Subscript (Name &min_part_sums:1 Load) (_slice_content (Constant i0 None)) Load)\n            (list Gt)\n            (list (Subscript (Name &C:1 Load) (_slice_content (Constant i0 None)) Load))\n          )\n          (/seq (Return (Constant i0 None)))\n          (/seq)\n        )\n        (Assign\n          (list (Name &answer:1 Store))\n          (BinOp\n            (List (list (_starred_content (Constant i1 None))) Load)\n            Mult\n            (BinOp\n              (BinOp\n                (Subscript (Name &part_sums:1 Load) (_slice_content (Constant i0 None)) Load)\n                Sub\n                (Call\n                  (Name g_max Load)\n                  (list\n                    (_starred_content (Constant i0 None))\n                    (_starred_content (Subscript (Name &min_part_sums:1 Load) (_slice_content (Constant i0 None)) Load))\n                  )\n                  nil\n                )\n              )\n              Add\n              (Constant i1 None)\n            )\n          )\n          None\n        )\n        (For\n          (Name &k:1 Store)\n          (Call\n            (Name g_range Load)\n            (list (_starred_content (Constant i1 None)) (_starred_content (Name &n:1 Load)))\n            nil\n          )\n          (/seq\n            (Assign\n              (list (Name &new_answer:1 Store))\n              (BinOp\n                (List (list (_starred_content (Constant i0 None))) Load)\n                Mult\n                (BinOp\n                  (BinOp\n                    (Subscript (Name &part_sums:1 Load) (_slice_content (Name &k:1 Load)) Load)\n                    Sub\n                    (Call\n                      (Name g_max Load)\n                      (list\n                        (_starred_content (Constant i0 None))\n                        (_starred_content\n                          (Subscript (Name &min_part_sums:1 Load) (_slice_content (Name &k:1 Load)) Load)\n                        )\n                      )\n                      nil\n                    )\n                  )\n                  Add\n                  (Constant i1 None)\n                )\n              )\n              None\n            )\n            (Assign (list (Name &cnt:1 Store)) (Constant i1 None) None)\n            (Assign\n              (list (Name &window:1 Store))\n              (Subscript (Name &answer:1 Load) (_slice_content (UnaryOp USub (Constant i1 None))) Load)\n              None\n            )\n            (Assign\n              (list (Subscript (Name &new_answer:1 Load) (_slice_content (UnaryOp USub (Constant i1 None))) Store))\n              (Name &window:1 Load)\n              None\n            )\n            (While\n              (Compare\n                (Name &cnt:1 Load)\n                (list LtE)\n                (list\n                  (BinOp\n                    (Call (Name g_len Load) (list (_starred_content (Name &new_answer:1 Load))) nil)\n                    Sub\n                    (Constant i1 None)\n                  )\n                )\n              )\n              (/seq\n                (AugAssign (Name &cnt:1 Store) Add (Constant i1 None))\n                (If\n                  (Compare\n                    (Name &cnt:1 Load)\n                    (list LtE)\n                    (list (Call (Name g_len Load) (list (_starred_content (Name &answer:1 Load))) nil))\n                  )\n                  (/seq\n                    (AugAssign\n                      (Name &window:1 Store)\n                      Add\n                      (Subscript (Name &answer:1 Load) (_slice_content (UnaryOp USub (Name &cnt:1 Load))) Load)\n                    )\n                  )\n                  (/seq)\n                )\n                (If\n                  (Compare\n                    (BinOp (Subscript (Name &C:1 Load) (_slice_content (Name &k:1 Load)) Load) Add (Constant i1 None))\n                    (list Lt)\n                    (list (Name &cnt:1 Load))\n                  )\n                  (/seq\n                    (AugAssign\n                      (Name &window:1 Store)\n                      Sub\n                      (Subscript\n                        (Name &answer:1 Load)\n                        (_slice_content\n                          (BinOp\n                            (BinOp\n                              (Subscript (Name &C:1 Load) (_slice_content (Name &k:1 Load)) Load)\n                              Add\n                              (Constant i1 None)\n                            )\n                            Sub\n                            (Name &cnt:1 Load)\n                          )\n                        )\n                        Load\n                      )\n                    )\n                  )\n                  (/seq)\n                )\n                (Assign\n                  (list (Subscript (Name &new_answer:1 Load) (_slice_content (UnaryOp USub (Name &cnt:1 Load))) Store))\n                  (Name &window:1 Load)\n                  None\n                )\n              )\n              (/seq)\n            )\n            (Assign (list (Name &answer:1 Store)) (Call (Attribute (Name &new_answer:1 Load) s_copy Load) nil nil) None)\n          )\n          (/seq)\n          None\n        )\n        (Assign\n          (list (Name &m:1 Store))\n          (BinOp (BinOp (Constant i10 None) Pow (Constant i9 None)) Add (Constant i7 None))\n          None\n        )\n        (Return\n          (BinOp (Call (Name g_sum Load) (list (_starred_content (Name &answer:1 Load))) nil) Mod (Name &m:1 Load))\n        )\n      )\n      nil\n      None\n      None\n    )\n    (Expr (Call (Name g_print Load) (list (_starred_content (Call (Name &sol:0 Load) nil nil))) nil))\n  )\n  nil\n)", "(Module\n  (/seq\n    (Import (list (alias g_sys None)))\n    (Assign\n      (list (Name &input:0 Store))\n      (Lambda\n        (arguments nil nil None nil nil None nil)\n        (Call\n          (Attribute\n            (Call (Attribute (Attribute (Name g_sys Load) s_stdin Load) s_readline Load) nil nil)\n            s_rstrip\n            Load\n          )\n          nil\n          nil\n        )\n      )\n      None\n    )\n    (Assign\n      (list (Name &N:0 Store))\n      (Call (Name g_int Load) (list (_starred_content (Call (Name &input:0 Load) nil nil))) nil)\n      None\n    )\n    (Assign\n      (list (Name &C:0 Store))\n      (ListComp\n        (Call (Name g_int Load) (list (_starred_content (Name &a:1 Load))) nil)\n        (list\n          (comprehension\n            (Name &a:1 Store)\n            (Call (Attribute (Call (Name &input:0 Load) nil nil) s_split Load) nil nil)\n            nil\n            i0\n          )\n        )\n      )\n      None\n    )\n    (Assign\n      (list (Name &B:0 Store))\n      (ListComp\n        (Call (Name g_int Load) (list (_starred_content (Name &a:2 Load))) nil)\n        (list\n          (comprehension\n            (Name &a:2 Store)\n            (Call (Attribute (Call (Name &input:0 Load) nil nil) s_split Load) nil nil)\n            nil\n            i0\n          )\n        )\n      )\n      None\n    )\n    (Assign\n      (list (Name &Q:0 Store))\n      (Call (Name g_int Load) (list (_starred_content (Call (Name &input:0 Load) nil nil))) nil)\n      None\n    )\n    (Assign\n      (list (Name &x:0 Store))\n      (Call (Name g_int Load) (list (_starred_content (Call (Name &input:0 Load) nil nil))) nil)\n      None\n    )\n    (Assign\n      (list (Name &P:0 Store))\n      (BinOp (BinOp (Constant i10 None) Pow (Constant i9 None)) Add (Constant i7 None))\n      None\n    )\n    (Assign\n      (list (Name &dp:0 Store))\n      (ListComp\n        (BinOp (List (list (_starred_content (Constant i0 None))) Load) Mult (Constant i20100 None))\n        (list\n          (comprehension\n            (Name &_:3 Store)\n            (Call (Name g_range Load) (list (_starred_content (BinOp (Name &N:0 Load) Add (Constant i1 None)))) nil)\n            nil\n            i0\n          )\n        )\n      )\n      None\n    )\n    (Assign\n      (list\n        (Subscript\n          (Subscript (Name &dp:0 Load) (_slice_content (Constant i0 None)) Load)\n          (_slice_content (Constant i0 None))\n          Store\n        )\n      )\n      (Constant i1 None)\n      None\n    )\n    (Assign (list (Name &ans:0 Store)) (Constant i0 None) None)\n    (Assign (list (Name &s:0 Store)) (Name &x:0 Load) None)\n    (Assign (list (Name &t:0 Store)) (Name &s:0 Load) None)\n    (For\n      (Name &i:0 Store)\n      (Call (Name g_range Load) (list (_starred_content (Name &N:0 Load))) nil)\n      (/seq\n        (For\n          (Name &j:0 Store)\n          (Call\n            (Name g_range Load)\n            (list\n              (_starred_content (Constant i20050 None))\n              (_starred_content (BinOp (Name &t:0 Load) Sub (Constant i1 None)))\n              (_starred_content (UnaryOp USub (Constant i1 None)))\n            )\n            nil\n          )\n          (/seq\n            (If (Compare (Name &j:0 Load) (list Lt) (list (Constant i0 None))) (/seq Break) (/seq))\n            (Assign\n              (list\n                (Subscript\n                  (Subscript (Name &dp:0 Load) (_slice_content (BinOp (Name &i:0 Load) Add (Constant i1 None))) Load)\n                  (_slice_content (Name &j:0 Load))\n                  Store\n                )\n              )\n              (BinOp\n                (BinOp\n                  (BinOp\n                    (Subscript\n                      (Subscript\n                        (Name &dp:0 Load)\n                        (_slice_content (BinOp (Name &i:0 Load) Add (Constant i1 None)))\n                        Load\n                      )\n                      (_slice_content (BinOp (Name &j:0 Load) Add (Constant i1 None)))\n                      Load\n                    )\n                    Add\n                    (Subscript\n                      (Subscript (Name &dp:0 Load) (_slice_content (Name &i:0 Load)) Load)\n                      (_slice_content\n                        (Call\n                          (Name g_max Load)\n                          (list\n                            (_starred_content\n                              (BinOp\n                                (Name &j:0 Load)\n                                Sub\n                                (Subscript (Name &C:0 Load) (_slice_content (Name &i:0 Load)) Load)\n                              )\n                            )\n                            (_starred_content (Constant i0 None))\n                          )\n                          nil\n                        )\n                      )\n                      Load\n                    )\n                  )\n                  Sub\n                  (Subscript\n                    (Subscript (Name &dp:0 Load) (_slice_content (Name &i:0 Load)) Load)\n                    (_slice_content (BinOp (Name &j:0 Load) Add (Constant i1 None)))\n                    Load\n                  )\n                )\n                Mod\n                (Name &P:0 Load)\n              )\n              None\n            )\n          )\n          (/seq)\n          None\n        )\n        (For\n          (Name &j:0 Store)\n          (Call\n            (Name g_range Load)\n            (list\n              (_starred_content\n                (Call\n                  (Name g_min Load)\n                  (list\n                    (_starred_content (BinOp (Name &t:0 Load) Sub (Constant i1 None)))\n                    (_starred_content (Constant i20050 None))\n                  )\n                  nil\n                )\n              )\n              (_starred_content (UnaryOp USub (Constant i1 None)))\n              (_starred_content (UnaryOp USub (Constant i1 None)))\n            )\n            nil\n          )\n          (/seq\n            (Assign\n              (list\n                (Subscript\n                  (Subscript (Name &dp:0 Load) (_slice_content (BinOp (Name &i:0 Load) Add (Constant i1 None))) Load)\n                  (_slice_content (Name &j:0 Load))\n                  Store\n                )\n              )\n              (Subscript\n                (Subscript (Name &dp:0 Load) (_slice_content (BinOp (Name &i:0 Load) Add (Constant i1 None))) Load)\n                (_slice_content (BinOp (Name &j:0 Load) Add (Constant i1 None)))\n                Load\n              )\n              None\n            )\n          )\n          (/seq)\n          None\n        )\n        (If\n          (Compare (Name &i:0 Load) (list Lt) (list (BinOp (Name &N:0 Load) Sub (Constant i1 None))))\n          (/seq\n            (AugAssign (Name &s:0 Store) Add (Subscript (Name &B:0 Load) (_slice_content (Name &i:0 Load)) Load))\n            (AugAssign (Name &t:0 Store) Add (Name &s:0 Load))\n          )\n          (/seq)\n        )\n      )\n      (/seq)\n      None\n    )\n    (Expr\n      (Call\n        (Name g_print Load)\n        (list\n          (_starred_content\n            (BinOp\n              (Subscript\n                (Subscript (Name &dp:0 Load) (_slice_content (UnaryOp USub (Constant i1 None))) Load)\n                (_slice_content (Constant i0 None))\n                Load\n              )\n              Mod\n              (Name &P:0 Load)\n            )\n          )\n        )\n        nil\n      )\n    )\n  )\n  nil\n)", "(Module\n  (/seq\n    (FunctionDef\n      &solve:0\n      (arguments nil nil None nil nil None nil)\n      (/seq\n        (Assign\n          (list (Name &MOD:1 Store))\n          (BinOp (BinOp (Constant i10 None) Pow (Constant i9 None)) Add (Constant i7 None))\n          None\n        )\n        (Assign\n          (list (Name &n:1 Store))\n          (Call (Name g_int Load) (list (_starred_content (Call (Name &input:0 Load) nil nil))) nil)\n          None\n        )\n        (Assign\n          (list (Name &c:1 Store))\n          (Call\n            (Name g_list Load)\n            (list\n              (_starred_content\n                (Call\n                  (Name g_map Load)\n                  (list\n                    (_starred_content (Name g_int Load))\n                    (_starred_content (Call (Attribute (Call (Name &input:0 Load) nil nil) s_split Load) nil nil))\n                  )\n                  nil\n                )\n              )\n            )\n            nil\n          )\n          None\n        )\n        (Assign\n          (list (Name &b:1 Store))\n          (BinOp\n            (List (list (_starred_content (Constant i0 None))) Load)\n            Add\n            (Call\n              (Name g_list Load)\n              (list\n                (_starred_content\n                  (Call\n                    (Name g_map Load)\n                    (list\n                      (_starred_content (Name g_int Load))\n                      (_starred_content (Call (Attribute (Call (Name &input:0 Load) nil nil) s_split Load) nil nil))\n                    )\n                    nil\n                  )\n                )\n              )\n              nil\n            )\n          )\n          None\n        )\n        (Assign\n          (list (Name &q:1 Store))\n          (Call (Name g_int Load) (list (_starred_content (Call (Name &input:0 Load) nil nil))) nil)\n          None\n        )\n        (Assign\n          (list (Name &queries:1 Store))\n          (Call\n            (Name g_list Load)\n            (list\n              (_starred_content\n                (Call\n                  (Name g_map Load)\n                  (list\n                    (_starred_content (Name g_int Load))\n                    (_starred_content (Call (Attribute (Call (Name &input:0 Load) nil nil) s_split Load) nil nil))\n                  )\n                  nil\n                )\n              )\n            )\n            nil\n          )\n          None\n        )\n        (Assign (list (Name &maxans:1 Store)) (Constant i1 None) None)\n        (For\n          (Name &c1:1 Store)\n          (Name &c:1 Load)\n          (/seq\n            (Assign\n              (list (Name &maxans:1 Store))\n              (BinOp\n                (BinOp (Name &maxans:1 Load) Mult (BinOp (Name &c1:1 Load) Add (Constant i1 None)))\n                Mod\n                (Name &MOD:1 Load)\n              )\n              None\n            )\n          )\n          (/seq)\n          None\n        )\n        (Assign (list (Name &ans:1 Store)) (Dict nil nil) None)\n        (For\n          (Name &i:1 Store)\n          (Call\n            (Name g_range Load)\n            (list (_starred_content (Constant i1 None)) (_starred_content (Name &n:1 Load)))\n            nil\n          )\n          (/seq\n            (AugAssign\n              (Subscript (Name &b:1 Load) (_slice_content (Name &i:1 Load)) Store)\n              Add\n              (Subscript (Name &b:1 Load) (_slice_content (BinOp (Name &i:1 Load) Sub (Constant i1 None))) Load)\n            )\n          )\n          (/seq)\n          None\n        )\n        (Assign (list (Name &s:1 Store) (Name &lb:1 Store)) (Constant i0 None) None)\n        (For\n          (Name &i:1 Store)\n          (Call\n            (Name g_range Load)\n            (list (_starred_content (Constant i1 None)) (_starred_content (Name &n:1 Load)))\n            nil\n          )\n          (/seq\n            (AugAssign (Name &s:1 Store) Sub (Subscript (Name &b:1 Load) (_slice_content (Name &i:1 Load)) Load))\n            (Assign\n              (list (Name &lb:1 Store))\n              (Call\n                (Name g_min Load)\n                (list\n                  (_starred_content (Name &lb:1 Load))\n                  (_starred_content (BinOp (Name &s:1 Load) FloorDiv (BinOp (Name &i:1 Load) Add (Constant i1 None))))\n                )\n                nil\n              )\n              None\n            )\n          )\n          (/seq)\n          None\n        )\n        (Assign\n          (list (Name &s:1 Store) (Name &ub:1 Store))\n          (Subscript (Name &c:1 Load) (_slice_content (Constant i0 None)) Load)\n          None\n        )\n        (For\n          (Name &i:1 Store)\n          (Call (Name g_range Load) (list (_starred_content (Name &n:1 Load))) nil)\n          (/seq\n            (AugAssign\n              (Name &s:1 Store)\n              Add\n              (BinOp\n                (Subscript (Name &c:1 Load) (_slice_content (Name &i:1 Load)) Load)\n                Sub\n                (Subscript (Name &b:1 Load) (_slice_content (Name &i:1 Load)) Load)\n              )\n            )\n            (Assign\n              (list (Name &ub:1 Store))\n              (Call\n                (Name g_min Load)\n                (list\n                  (_starred_content (Name &ub:1 Load))\n                  (_starred_content (BinOp (Name &s:1 Load) FloorDiv (BinOp (Name &i:1 Load) Add (Constant i1 None))))\n                )\n                nil\n              )\n              None\n            )\n          )\n          (/seq)\n          None\n        )\n        (For\n          (Name &x:1 Store)\n          (Name &queries:1 Load)\n          (/seq\n            (If\n              (Compare (Name &x:1 Load) (list LtE) (list (Name &lb:1 Load)))\n              (/seq (Expr (Call (Name g_print Load) (list (_starred_content (Name &maxans:1 Load))) nil)))\n              (/seq\n                (If\n                  (Compare (Name &x:1 Load) (list Gt) (list (Name &ub:1 Load)))\n                  (/seq (Expr (Call (Name g_print Load) (list (_starred_content (Constant i0 None))) nil)))\n                  (/seq\n                    (If\n                      (Compare (Name &x:1 Load) (list In) (list (Name &ans:1 Load)))\n                      (/seq\n                        (Expr\n                          (Call\n                            (Name g_print Load)\n                            (list\n                              (_starred_content (Subscript (Name &ans:1 Load) (_slice_content (Name &x:1 Load)) Load))\n                            )\n                            nil\n                          )\n                        )\n                      )\n                      (/seq\n                        (Assign\n                          (list (Name &dp0:1 Store))\n                          (BinOp (List (list (_starred_content (Constant i1 None))) Load) Mult (Constant i10002 None))\n                          None\n                        )\n                        (Assign\n                          (list (Subscript (Name &dp0:1 Load) (_slice_content (Constant i0 None)) Store))\n                          (Constant i0 None)\n                          None\n                        )\n                        (Assign (list (Name &bd:1 Store)) (Constant i0 None) None)\n                        (For\n                          (Name &i:1 Store)\n                          (Call (Name g_range Load) (list (_starred_content (Name &n:1 Load))) nil)\n                          (/seq\n                            (Assign\n                              (list (Name &dp1:1 Store))\n                              (BinOp\n                                (List (list (_starred_content (Constant i0 None))) Load)\n                                Mult\n                                (Constant i10002 None)\n                              )\n                              None\n                            )\n                            (AugAssign\n                              (Name &bd:1 Store)\n                              Add\n                              (BinOp\n                                (Subscript (Name &b:1 Load) (_slice_content (Name &i:1 Load)) Load)\n                                Add\n                                (Name &x:1 Load)\n                              )\n                            )\n                            (For\n                              (Name &j:1 Store)\n                              (Call\n                                (Name g_range Load)\n                                (list\n                                  (_starred_content\n                                    (Call\n                                      (Name g_max Load)\n                                      (list (_starred_content (Name &bd:1 Load)) (_starred_content (Constant i0 None)))\n                                      nil\n                                    )\n                                  )\n                                  (_starred_content (Constant i10001 None))\n                                )\n                                nil\n                              )\n                              (/seq\n                                (Assign\n                                  (list\n                                    (Subscript\n                                      (Name &dp1:1 Load)\n                                      (_slice_content (BinOp (Name &j:1 Load) Add (Constant i1 None)))\n                                      Store\n                                    )\n                                  )\n                                  (BinOp\n                                    (BinOp\n                                      (BinOp\n                                        (Subscript (Name &dp1:1 Load) (_slice_content (Name &j:1 Load)) Load)\n                                        Add\n                                        (Subscript\n                                          (Name &dp0:1 Load)\n                                          (_slice_content (BinOp (Name &j:1 Load) Add (Constant i1 None)))\n                                          Load\n                                        )\n                                      )\n                                      Sub\n                                      (Subscript\n                                        (Name &dp0:1 Load)\n                                        (_slice_content\n                                          (Call\n                                            (Name g_max Load)\n                                            (list\n                                              (_starred_content\n                                                (BinOp\n                                                  (Name &j:1 Load)\n                                                  Sub\n                                                  (Subscript (Name &c:1 Load) (_slice_content (Name &i:1 Load)) Load)\n                                                )\n                                              )\n                                              (_starred_content (Constant i0 None))\n                                            )\n                                            nil\n                                          )\n                                        )\n                                        Load\n                                      )\n                                    )\n                                    Mod\n                                    (Name &MOD:1 Load)\n                                  )\n                                  None\n                                )\n                              )\n                              (/seq)\n                              None\n                            )\n                            (Assign\n                              (list (Name &dp0:1 Store))\n                              (Subscript (Name &dp1:1 Load) (_slice_slice (Slice None None None)) Load)\n                              None\n                            )\n                          )\n                          (/seq)\n                          None\n                        )\n                        (Assign\n                          (list (Name &a:1 Store))\n                          (Subscript (Name &dp0:1 Load) (_slice_content (UnaryOp USub (Constant i1 None))) Load)\n                          None\n                        )\n                        (Assign\n                          (list (Subscript (Name &ans:1 Load) (_slice_content (Name &x:1 Load)) Store))\n                          (Name &a:1 Load)\n                          None\n                        )\n                        (Expr (Call (Name g_print Load) (list (_starred_content (Name &a:1 Load))) nil))\n                      )\n                    )\n                  )\n                )\n              )\n            )\n          )\n          (/seq)\n          None\n        )\n      )\n      nil\n      None\n      None\n    )\n    (Import (list (alias &sys:0 None)))\n    (Assign\n      (list (Name &input:0 Store))\n      (Lambda\n        (arguments nil nil None nil nil None nil)\n        (Call\n          (Attribute\n            (Call (Attribute (Attribute (Name &sys:0 Load) s_stdin Load) s_readline Load) nil nil)\n            s_rstrip\n            Load\n          )\n          nil\n          nil\n        )\n      )\n      None\n    )\n    (Expr (Call (Name &solve:0 Load) nil nil))\n  )\n  nil\n)", "(Module\n  (/seq\n    (Import (list (alias g_sys None)))\n    (Assign\n      (list (Name &input:0 Store))\n      (Lambda\n        (arguments nil nil None nil nil None nil)\n        (Call\n          (Attribute\n            (Call (Attribute (Attribute (Name g_sys Load) s_stdin Load) s_readline Load) nil nil)\n            s_rstrip\n            Load\n          )\n          nil\n          nil\n        )\n      )\n      None\n    )\n    (Assign\n      (list (Name &N:0 Store))\n      (Call (Name g_int Load) (list (_starred_content (Call (Name &input:0 Load) nil nil))) nil)\n      None\n    )\n    (Assign\n      (list (Name &C:0 Store))\n      (ListComp\n        (Call (Name g_int Load) (list (_starred_content (Name &a:1 Load))) nil)\n        (list\n          (comprehension\n            (Name &a:1 Store)\n            (Call (Attribute (Call (Name &input:0 Load) nil nil) s_split Load) nil nil)\n            nil\n            i0\n          )\n        )\n      )\n      None\n    )\n    (Assign\n      (list (Name &B:0 Store))\n      (ListComp\n        (Call (Name g_int Load) (list (_starred_content (Name &a:2 Load))) nil)\n        (list\n          (comprehension\n            (Name &a:2 Store)\n            (Call (Attribute (Call (Name &input:0 Load) nil nil) s_split Load) nil nil)\n            nil\n            i0\n          )\n        )\n      )\n      None\n    )\n    (Assign\n      (list (Name &Q:0 Store))\n      (Call (Name g_int Load) (list (_starred_content (Call (Name &input:0 Load) nil nil))) nil)\n      None\n    )\n    (Assign\n      (list (Name &x:0 Store))\n      (Call (Name g_int Load) (list (_starred_content (Call (Name &input:0 Load) nil nil))) nil)\n      None\n    )\n    (Assign\n      (list (Name &P:0 Store))\n      (BinOp (BinOp (Constant i10 None) Pow (Constant i9 None)) Add (Constant i7 None))\n      None\n    )\n    (Assign\n      (list (Name &dp:0 Store))\n      (ListComp\n        (BinOp (List (list (_starred_content (Constant i0 None))) Load) Mult (Constant i20100 None))\n        (list\n          (comprehension\n            (Name &_:3 Store)\n            (Call (Name g_range Load) (list (_starred_content (BinOp (Name &N:0 Load) Add (Constant i1 None)))) nil)\n            nil\n            i0\n          )\n        )\n      )\n      None\n    )\n    (Assign\n      (list\n        (Subscript\n          (Subscript (Name &dp:0 Load) (_slice_content (Constant i0 None)) Load)\n          (_slice_content (Constant i0 None))\n          Store\n        )\n      )\n      (Constant i1 None)\n      None\n    )\n    (Assign (list (Name &ans:0 Store)) (Constant i0 None) None)\n    (Assign (list (Name &s:0 Store)) (Name &x:0 Load) None)\n    (Assign (list (Name &t:0 Store)) (Name &s:0 Load) None)\n    (For\n      (Name &i:0 Store)\n      (Call (Name g_range Load) (list (_starred_content (Name &N:0 Load))) nil)\n      (/seq\n        (For\n          (Name &j:0 Store)\n          (Call\n            (Name g_range Load)\n            (list\n              (_starred_content (Constant i20050 None))\n              (_starred_content (BinOp (Name &t:0 Load) Sub (Constant i1 None)))\n              (_starred_content (UnaryOp USub (Constant i1 None)))\n            )\n            nil\n          )\n          (/seq\n            (If (Compare (Name &j:0 Load) (list Lt) (list (Constant i0 None))) (/seq Break) (/seq))\n            (Assign\n              (list\n                (Subscript\n                  (Subscript (Name &dp:0 Load) (_slice_content (BinOp (Name &i:0 Load) Add (Constant i1 None))) Load)\n                  (_slice_content (Name &j:0 Load))\n                  Store\n                )\n              )\n              (BinOp\n                (BinOp\n                  (BinOp\n                    (Subscript\n                      (Subscript\n                        (Name &dp:0 Load)\n                        (_slice_content (BinOp (Name &i:0 Load) Add (Constant i1 None)))\n                        Load\n                      )\n                      (_slice_content (BinOp (Name &j:0 Load) Add (Constant i1 None)))\n                      Load\n                    )\n                    Add\n                    (Subscript\n                      (Subscript (Name &dp:0 Load) (_slice_content (Name &i:0 Load)) Load)\n                      (_slice_content\n                        (Call\n                          (Name g_max Load)\n                          (list\n                            (_starred_content\n                              (BinOp\n                                (Name &j:0 Load)\n                                Sub\n                                (Subscript (Name &C:0 Load) (_slice_content (Name &i:0 Load)) Load)\n                              )\n                            )\n                            (_starred_content (Constant i0 None))\n                          )\n                          nil\n                        )\n                      )\n                      Load\n                    )\n                  )\n                  Sub\n                  (Subscript\n                    (Subscript (Name &dp:0 Load) (_slice_content (Name &i:0 Load)) Load)\n                    (_slice_content (BinOp (Name &j:0 Load) Add (Constant i1 None)))\n                    Load\n                  )\n                )\n                Mod\n                (Name &P:0 Load)\n              )\n              None\n            )\n          )\n          (/seq)\n          None\n        )\n        (For\n          (Name &j:0 Store)\n          (Call\n            (Name g_range Load)\n            (list\n              (_starred_content\n                (Call\n                  (Name g_min Load)\n                  (list\n                    (_starred_content (BinOp (Name &t:0 Load) Sub (Constant i1 None)))\n                    (_starred_content (Constant i20050 None))\n                  )\n                  nil\n                )\n              )\n              (_starred_content (UnaryOp USub (Constant i1 None)))\n              (_starred_content (UnaryOp USub (Constant i1 None)))\n            )\n            nil\n          )\n          (/seq\n            (Assign\n              (list\n                (Subscript\n                  (Subscript (Name &dp:0 Load) (_slice_content (BinOp (Name &i:0 Load) Add (Constant i1 None))) Load)\n                  (_slice_content (Name &j:0 Load))\n                  Store\n                )\n              )\n              (Subscript\n                (Subscript (Name &dp:0 Load) (_slice_content (BinOp (Name &i:0 Load) Add (Constant i1 None))) Load)\n                (_slice_content (BinOp (Name &j:0 Load) Add (Constant i1 None)))\n                Load\n              )\n              None\n            )\n          )\n          (/seq)\n          None\n        )\n        (If\n          (Compare (Name &i:0 Load) (list Lt) (list (BinOp (Name &N:0 Load) Sub (Constant i1 None))))\n          (/seq\n            (AugAssign (Name &s:0 Store) Add (Subscript (Name &B:0 Load) (_slice_content (Name &i:0 Load)) Load))\n            (AugAssign (Name &t:0 Store) Add (Name &s:0 Load))\n          )\n          (/seq)\n        )\n      )\n      (/seq)\n      None\n    )\n    (Expr\n      (Call\n        (Name g_print Load)\n        (list\n          (_starred_content\n            (BinOp\n              (Subscript\n                (Subscript (Name &dp:0 Load) (_slice_content (UnaryOp USub (Constant i1 None))) Load)\n                (_slice_content (Constant i0 None))\n                Load\n              )\n              Mod\n              (Name &P:0 Load)\n            )\n          )\n        )\n        nil\n      )\n    )\n  )\n  nil\n)"]