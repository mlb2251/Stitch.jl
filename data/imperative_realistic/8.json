["(Module\n  (/seq\n    (Assign\n      (list (Tuple (list (Name &num:0 Store) (Name &wiz:0 Store) (Name &per:0 Store)) Store))\n      (Call\n        (Name g_map Load)\n        (list (Name g_int Load) (Call (Attribute (Call (Name g_input Load) nil nil) s_split Load) nil nil))\n        nil\n      )\n      None\n    )\n    (Assign (list (Name &k:0 Store)) (Constant i0 None) None)\n    (While\n      (Compare\n        (BinOp (BinOp (BinOp (Name &k:0 Load) Add (Name &wiz:0 Load)) Div (Name &num:0 Load)) Mult (Constant i100 None))\n        (list Lt)\n        (list (Name &per:0 Load))\n      )\n      (/seq (AugAssign (Name &k:0 Store) Add (Constant i1 None)))\n      nil\n    )\n    (Expr (Call (Name g_print Load) (list (Name &k:0 Load)) nil))\n  )\n  nil\n)", "(Module\n  (/seq\n    (Assign\n      (list (Tuple (list (Name &n:0 Store) (Name &x:0 Store) (Name &y:0 Store)) Store))\n      (Call\n        (Name g_map Load)\n        (list (Name g_int Load) (Call (Attribute (Call (Name g_input Load) nil nil) s_split Load) nil nil))\n        nil\n      )\n      None\n    )\n    (AugAssign (Name &y:0 Store) Div (Constant i100 None))\n    (Assign (list (Name &c:0 Store)) (Constant i0 None) None)\n    (While\n      (Constant True None)\n      (/seq\n        (If\n          (Compare\n            (BinOp (BinOp (Name &x:0 Load) Add (Name &c:0 Load)) Div (Name &n:0 Load))\n            (list GtE)\n            (list (Name &y:0 Load))\n          )\n          (/seq Break)\n          nil\n        )\n        (AugAssign (Name &c:0 Store) Add (Constant i1 None))\n      )\n      nil\n    )\n    (Expr (Call (Name g_print Load) (list (Name &c:0 Load)) nil))\n  )\n  nil\n)", "(Module\n  (/seq\n    (Import (list (alias g_math None)))\n    (Assign\n      (list (Tuple (list (Name &n:0 Store) (Name &x:0 Store) (Name &y:0 Store)) Store))\n      (Call\n        (Name g_map Load)\n        (list (Name g_int Load) (Call (Attribute (Call (Name g_input Load) nil nil) s_split Load) nil nil))\n        nil\n      )\n      None\n    )\n    (Assign\n      (list (Name &z:0 Store))\n      (Call\n        (Attribute (Name g_math Load) s_ceil Load)\n        (list (BinOp (BinOp (Name &y:0 Load) Div (Constant i100 None)) Mult (Name &n:0 Load)))\n        nil\n      )\n      None\n    )\n    (If\n      (Compare (Name &x:0 Load) (list GtE) (list (Name &z:0 Load)))\n      (/seq (Expr (Call (Name g_print Load) (list (Constant i0 None)) nil)))\n      (/seq (Expr (Call (Name g_print Load) (list (BinOp (Name &z:0 Load) Sub (Name &x:0 Load))) nil)))\n    )\n  )\n  nil\n)", "(Module\n  (/seq\n    (Assign (list (Name &z:0 Store)) (Name g_input Load) None)\n    (Assign\n      (list (Name &mod:0 Store))\n      (BinOp (BinOp (Constant i10 None) Pow (Constant i9 None)) Add (Constant i7 None))\n      None\n    )\n    (ImportFrom s_collections (list (alias &*:0 None)) i0)\n    (ImportFrom s_queue (list (alias &*:0 None)) i0)\n    (ImportFrom s_sys (list (alias &*:0 None)) i0)\n    (ImportFrom s_collections (list (alias &*:0 None)) i0)\n    (ImportFrom s_math (list (alias &*:0 None)) i0)\n    (ImportFrom s_heapq (list (alias &*:0 None)) i0)\n    (ImportFrom s_itertools (list (alias &*:0 None)) i0)\n    (ImportFrom s_bisect (list (alias &*:0 None)) i0)\n    (ImportFrom s_collections (list (alias s_Counter &cc:0)) i0)\n    (ImportFrom s_math (list (alias s_factorial &f:0)) i0)\n    (FunctionDef\n      &lcd:0\n      (arguments nil (list (arg &xnum1:1 None None) (arg &xnum2:1 None None)) None nil nil None nil)\n      (/seq\n        (Return\n          (BinOp\n            (BinOp (Name &xnum1:1 Load) Mult (Name &xnum2:1 Load))\n            FloorDiv\n            (Call (Name g_gcd Load) (list (Name &xnum1:1 Load) (Name &xnum2:1 Load)) nil)\n          )\n        )\n      )\n      nil\n      None\n      None\n    )\n    (Expr\n      (Constant\n        s-WzEwLCAxMCwgMTEwLCA2MSwgMTA1LCAxMTAsIDExNiwgNDAsIDEyMiwgNDAsIDQxLCA0MSwgMTAsIDEwLCAxMDIsIDExMSwgMTE0LCAzMiwgOTUsIDMyLCAxMDUsIDExMCwgMzIsIDExNCwgOTcsIDExMCwgMTAzLCAxMDEsIDQwLCAxMDUsIDExMCwgMTE2LCA0MCwgMTIyLCA0MCwgNDEsIDQxLCA0MSwgNTgsIDEwLCAxMCwgMTIwLCA2MSwgMTA1LCAxMTAsIDExNiwgNDAsIDEyMiwgNDAsIDQxLCA0MSwgMTAsIDEwLCAxMDgsIDYxLCAxMDgsIDEwNSwgMTE1LCAxMTYsIDQwLCAxMDksIDk3LCAxMTIsIDQwLCAxMDUsIDExMCwgMTE2LCA0NCwgMTIyLCA0MCwgNDEsIDQ2LCAxMTUsIDExMiwgMTA4LCAxMDUsIDExNiwgNDAsIDQxLCA0MSwgNDEsIDEwLCAxMCwgMTEwLCA2MSwgMTA1LCAxMTAsIDExNiwgNDAsIDEyMiwgNDAsIDQxLCA0MSwgMTAsIDEwLCAxMDgsIDYxLCAxMTUsIDExMSwgMTE0LCAxMTYsIDEwMSwgMTAwLCA0MCwgMTA4LCAxMDUsIDExNSwgMTE2LCA0MCwgMTA5LCA5NywgMTEyLCA0MCwgMTA1LCAxMTAsIDExNiwgNDQsIDEyMiwgNDAsIDQxLCA0NiwgMTE1LCAxMTIsIDEwOCwgMTA1LCAxMTYsIDQwLCA0MSwgNDEsIDQxLCA0MSwgOTEsIDU4LCA1OCwgNDUsIDQ5LCA5MywgMTAsIDEwLCA5NywgNDQsIDk4LCA2MSwgMTA5LCA5NywgMTEyLCA0MCwgMTA1LCAxMTAsIDExNiwgNDQsIDEyMiwgNDAsIDQxLCA0NiwgMTE1LCAxMTIsIDEwOCwgMTA1LCAxMTYsIDQwLCA0MSwgNDEsIDEwLCAxMCwgMTA4LCA2MSwgMTE1LCAxMDEsIDExNiwgNDAsIDEwOSwgOTcsIDExMiwgNDAsIDEwNSwgMTEwLCAxMTYsIDQ0LCAxMjIsIDQwLCA0MSwgNDYsIDExNSwgMTEyLCAxMDgsIDEwNSwgMTE2LCA0MCwgNDEsIDQxLCA0MSwgMTAsIDEwLCAxMDgsIDEwMSwgMTAwLCA2MSwgNDAsIDU0LCA0NCwgNTAsIDQ0LCA1MywgNDQsIDUzLCA0NCwgNTIsIDQ0LCA1MywgNDQsIDU0LCA0NCwgNTEsIDQ0LCA1NSwgNDQsIDU0LCA0MSwgMTAsIDEwLCAxMTgsIDExMSwgMTE5LCAxMDEsIDEwOCwgNjEsIDEyMywgMzksIDk3LCAzOSwgNTgsIDQ4LCA0NCwgMzksIDEwMSwgMzksIDU4LCA0OCwgNDQsIDM5LCAxMDUsIDM5LCA1OCwgNDgsIDQ0LCAzOSwgMTExLCAzOSwgNTgsIDQ4LCA0NCwgMzksIDExNywgMzksIDU4LCA0OCwgMTI1LCAxMCwgMTAsIDk5LCAxMTEsIDEwOCwgMTExLCAxMTQsIDQ1LCA1MiwgNjEsIDkxLCAzNCwgNzEsIDM0LCA0NCwgMzIsIDM0LCA3MSwgNjYsIDM0LCA0NCwgMzIsIDM0LCA4OSwgNzEsIDY2LCAzNCwgNDQsIDMyLCAzNCwgODksIDcxLCA2NiwgNzMsIDM0LCA0NCwgMzIsIDM0LCA3OSwgODksIDcxLCA2NiwgNzMsIDM0LCAzMiwgNDQsIDM0LCA3OSwgODksIDcxLCA2NiwgNzMsIDg2LCAzNCwgNDQsIDM5LCA4MiwgNzksIDg5LCA3MSwgNjYsIDczLCA4NiwgMzksIDMyLCA5MywgMTAsIDEwXQ==\n        None\n      )\n    )\n    (For\n      (Name &_:0 Store)\n      (Call (Name g_range Load) (list (Constant i1 None)) nil)\n      (/seq\n        (Assign\n          (list (Tuple (list (Name &n:0 Store) (Name &x:0 Store) (Name &y:0 Store)) Store))\n          (Call\n            (Name g_map Load)\n            (list (Name g_int Load) (Call (Attribute (Call (Name g_input Load) nil nil) s_split Load) nil nil))\n            nil\n          )\n          None\n        )\n        (Assign (list (Name &w:0 Store)) (Name &x:0 Load) None)\n        (Assign (list (Name &m:0 Store)) (BinOp (Name &n:0 Load) Sub (Name &x:0 Load)) None)\n        (Assign\n          (list (Name &t:0 Store))\n          (Call\n            (Name g_ceil Load)\n            (list (BinOp (BinOp (Name &n:0 Load) Mult (Name &y:0 Load)) Div (Constant i100 None)))\n            nil\n          )\n          None\n        )\n        (Expr\n          (Call\n            (Name g_print Load)\n            (list (Call (Name g_max Load) (list (Constant i0 None) (BinOp (Name &t:0 Load) Sub (Name &x:0 Load))) nil))\n            nil\n          )\n        )\n      )\n      nil\n      None\n    )\n  )\n  nil\n)", "(Module\n  (/seq\n    (Import (list (alias g_math None)))\n    (Assign\n      (list (Tuple (list (Name &n:0 Store) (Name &x:0 Store) (Name &y:0 Store)) Store))\n      (Call\n        (Name g_map Load)\n        (list (Name g_int Load) (Call (Attribute (Call (Name g_input Load) nil nil) s_split Load) nil nil))\n        nil\n      )\n      None\n    )\n    (Assign\n      (list (Name &percentage:0 Store))\n      (Call\n        (Attribute (Name g_math Load) s_ceil Load)\n        (list (BinOp (BinOp (Name &y:0 Load) Mult (Name &n:0 Load)) Div (Constant i100 None)))\n        nil\n      )\n      None\n    )\n    (Expr\n      (Call\n        (Name g_print Load)\n        (list\n          (Call (Name g_max Load) (list (Constant i0 None) (BinOp (Name &percentage:0 Load) Sub (Name &x:0 Load))) nil)\n        )\n        nil\n      )\n    )\n  )\n  nil\n)", "(Module\n  (/seq\n    (Expr\n      (Constant\n        s-WzEwLCAzMiwgMTAsIDExMCwgNjEsIDEwNSwgMTEwLCAxMTYsIDQwLCAxMjIsIDQwLCA0MSwgNDEsIDEwLCAzMiwgMTAsIDEwMiwgMTExLCAxMTQsIDMyLCA5NSwgMzIsIDEwNSwgMTEwLCAzMiwgMTE0LCA5NywgMTEwLCAxMDMsIDEwMSwgNDAsIDEwNSwgMTEwLCAxMTYsIDQwLCAxMjIsIDQwLCA0MSwgNDEsIDQxLCA1OCwgMTAsIDMyLCAxMCwgMTIwLCA2MSwgMTA1LCAxMTAsIDExNiwgNDAsIDEyMiwgNDAsIDQxLCA0MSwgMTAsIDMyLCAxMCwgMTA4LCA2MSwgMTA4LCAxMDUsIDExNSwgMTE2LCA0MCwgMTA5LCA5NywgMTEyLCA0MCwgMTA1LCAxMTAsIDExNiwgNDQsIDEyMiwgNDAsIDQxLCA0NiwgMTE1LCAxMTIsIDEwOCwgMTA1LCAxMTYsIDQwLCA0MSwgNDEsIDQxLCAxMCwgMzIsIDEwLCAxMTAsIDYxLCAxMDUsIDExMCwgMTE2LCA0MCwgMTIyLCA0MCwgNDEsIDQxLCAxMCwgMzIsIDEwLCAxMDgsIDYxLCAxMTUsIDExMSwgMTE0LCAxMTYsIDEwMSwgMTAwLCA0MCwgMTA4LCAxMDUsIDExNSwgMTE2LCA0MCwgMTA5LCA5NywgMTEyLCA0MCwgMTA1LCAxMTAsIDExNiwgNDQsIDEyMiwgNDAsIDQxLCA0NiwgMTE1LCAxMTIsIDEwOCwgMTA1LCAxMTYsIDQwLCA0MSwgNDEsIDQxLCA0MSwgOTEsIDU4LCA1OCwgNDUsIDQ5LCA5MywgMTAsIDMyLCAxMCwgOTcsIDQ0LCA5OCwgNjEsIDEwOSwgOTcsIDExMiwgNDAsIDEwNSwgMTEwLCAxMTYsIDQ0LCAxMjIsIDQwLCA0MSwgNDYsIDExNSwgMTEyLCAxMDgsIDEwNSwgMTE2LCA0MCwgNDEsIDQxLCAxMCwgMzIsIDEwLCAxMDgsIDYxLCAxMTUsIDEwMSwgMTE2LCA0MCwgMTA5LCA5NywgMTEyLCA0MCwgMTA1LCAxMTAsIDExNiwgNDQsIDEyMiwgNDAsIDQxLCA0NiwgMTE1LCAxMTIsIDEwOCwgMTA1LCAxMTYsIDQwLCA0MSwgNDEsIDQxLCAxMCwgMzIsIDEwLCAxMDgsIDEwMSwgMTAwLCA2MSwgNDAsIDU0LCA0NCwgNTAsIDQ0LCA1MywgNDQsIDUzLCA0NCwgNTIsIDQ0LCA1MywgNDQsIDU0LCA0NCwgNTEsIDQ0LCA1NSwgNDQsIDU0LCA0MSwgMTAsIDMyLCAxMCwgMTE4LCAxMTEsIDExOSwgMTAxLCAxMDgsIDYxLCAxMjMsIDM5LCA5NywgMzksIDU4LCA0OCwgNDQsIDM5LCAxMDEsIDM5LCA1OCwgNDgsIDQ0LCAzOSwgMTA1LCAzOSwgNTgsIDQ4LCA0NCwgMzksIDExMSwgMzksIDU4LCA0OCwgNDQsIDM5LCAxMTcsIDM5LCA1OCwgNDgsIDEyNSwgMTAsIDMyLCAxMCwgOTksIDExMSwgMTA4LCAxMTEsIDExNCwgNTIsIDYxLCA5MSwgMzQsIDcxLCAzNCwgNDQsIDMyLCAzNCwgNzEsIDY2LCAzNCwgNDQsIDMyLCAzNCwgODksIDcxLCA2NiwgMzQsIDQ0LCAzMiwgMzQsIDg5LCA3MSwgNjYsIDczLCAzNCwgNDQsIDMyLCAzNCwgNzksIDg5LCA3MSwgNjYsIDczLCAzNCwgMzIsIDQ0LCAzNCwgNzksIDg5LCA3MSwgNjYsIDczLCA4NiwgMzQsIDQ0LCAzOSwgODIsIDc5LCA4OSwgNzEsIDY2LCA3MywgODYsIDM5LCAzMiwgOTMsIDEwLCAzMiwgMTBd\n        None\n      )\n    )\n    (Import (list (alias &os:0 None)))\n    (Import (list (alias &sys:0 None)))\n    (ImportFrom s_io (list (alias &BytesIO:0 None) (alias &IOBase:0 None)) i0)\n    (Assign (list (Name &input:0 Store)) (Attribute (Attribute (Name &sys:0 Load) s_stdin Load) s_readline Load) None)\n    (FunctionDef\n      &inp:0\n      (arguments nil nil None nil nil None nil)\n      (/seq (Return (Call (Name g_int Load) (list (Call (Name &input:0 Load) nil nil)) nil)))\n      nil\n      None\n      None\n    )\n    (FunctionDef\n      &inlt:0\n      (arguments nil nil None nil nil None nil)\n      (/seq\n        (Return\n          (Call\n            (Name g_list Load)\n            (list\n              (Call\n                (Name g_map Load)\n                (list (Name g_int Load) (Call (Attribute (Call (Name &input:0 Load) nil nil) s_split Load) nil nil))\n                nil\n              )\n            )\n            nil\n          )\n        )\n      )\n      nil\n      None\n      None\n    )\n    (FunctionDef\n      &insr:0\n      (arguments nil nil None nil nil None nil)\n      (/seq\n        (Assign (list (Name &s:3 Store)) (Call (Name &input:0 Load) nil nil) None)\n        (Return\n          (Call\n            (Name g_list Load)\n            (list\n              (Subscript\n                (Name &s:3 Load)\n                (Slice None (BinOp (Call (Name g_len Load) (list (Name &s:3 Load)) nil) Sub (Constant i1 None)) None)\n                Load\n              )\n            )\n            nil\n          )\n        )\n      )\n      nil\n      None\n      None\n    )\n    (FunctionDef\n      &invr:0\n      (arguments nil nil None nil nil None nil)\n      (/seq\n        (Return\n          (Call\n            (Name g_map Load)\n            (list (Name g_int Load) (Call (Attribute (Call (Name &input:0 Load) nil nil) s_split Load) nil nil))\n            nil\n          )\n        )\n      )\n      nil\n      None\n      None\n    )\n    (ImportFrom s_math (list (alias &ceil:0 None)) i0)\n    (FunctionDef\n      &main:0\n      (arguments nil nil None nil nil None nil)\n      (/seq\n        (Try\n          (/seq\n            (Assign\n              (list (Tuple (list (Name &n:4 Store) (Name &x:4 Store) (Name &y:4 Store)) Store))\n              (Call (Name &invr:0 Load) nil nil)\n              None\n            )\n            (Expr\n              (Call\n                (Name g_print Load)\n                (list\n                  (Call\n                    (Name g_max Load)\n                    (list\n                      (Constant i0 None)\n                      (BinOp\n                        (Call\n                          (Name &ceil:0 Load)\n                          (list (BinOp (BinOp (Name &y:4 Load) Mult (Name &n:4 Load)) Div (Constant i100 None)))\n                          nil\n                        )\n                        Sub\n                        (Name &x:4 Load)\n                      )\n                    )\n                    nil\n                  )\n                )\n                nil\n              )\n            )\n          )\n          (list\n            (ExceptHandler\n              (Name g_Exception Load)\n              &e:4\n              (/seq (Expr (Call (Name g_print Load) (list (Name &e:4 Load)) nil)))\n            )\n          )\n          nil\n          nil\n        )\n      )\n      nil\n      None\n      None\n    )\n    (Assign (list (Name &BUFSIZE:0 Store)) (Constant i8192 None) None)\n    (ClassDef\n      &FastIO:0\n      (list (Name &IOBase:0 Load))\n      nil\n      (/seq\n        (Assign (list (Name &newlines:1 Store)) (Constant i0 None) None)\n        (FunctionDef\n          &__init__:1\n          (arguments nil (list (arg &self:5 None None) (arg &file:5 None None)) None nil nil None nil)\n          (/seq\n            (Assign\n              (list (Attribute (Name &self:5 Load) s__fd Store))\n              (Call (Attribute (Name &file:5 Load) s_fileno Load) nil nil)\n              None\n            )\n            (Assign (list (Attribute (Name &self:5 Load) s_buffer Store)) (Call (Name &BytesIO:0 Load) nil nil) None)\n            (Assign\n              (list (Attribute (Name &self:5 Load) s_writable Store))\n              (BoolOp\n                Or\n                (list\n                  (Compare (Constant s_x None) (list In) (list (Attribute (Name &file:5 Load) s_mode Load)))\n                  (Compare (Constant s_r None) (list NotIn) (list (Attribute (Name &file:5 Load) s_mode Load)))\n                )\n              )\n              None\n            )\n            (Assign\n              (list (Attribute (Name &self:5 Load) s_write Store))\n              (IfExp\n                (Attribute (Name &self:5 Load) s_writable Load)\n                (Attribute (Attribute (Name &self:5 Load) s_buffer Load) s_write Load)\n                (Constant None None)\n              )\n              None\n            )\n          )\n          nil\n          None\n          None\n        )\n        (FunctionDef\n          &read:1\n          (arguments nil (list (arg &self:6 None None)) None nil nil None nil)\n          (/seq\n            (While\n              (Constant True None)\n              (/seq\n                (Assign\n                  (list (Name &b:6 Store))\n                  (Call\n                    (Attribute (Name &os:0 Load) s_read Load)\n                    (list\n                      (Attribute (Name &self:6 Load) s__fd Load)\n                      (Call\n                        (Name g_max Load)\n                        (list\n                          (Attribute\n                            (Call\n                              (Attribute (Name &os:0 Load) s_fstat Load)\n                              (list (Attribute (Name &self:6 Load) s__fd Load))\n                              nil\n                            )\n                            s_st_size\n                            Load\n                          )\n                          (Name &BUFSIZE:0 Load)\n                        )\n                        nil\n                      )\n                    )\n                    nil\n                  )\n                  None\n                )\n                (If (UnaryOp Not (Name &b:6 Load)) (/seq Break) nil)\n                (Assign\n                  (list (Name &ptr:6 Store))\n                  (Call (Attribute (Attribute (Name &self:6 Load) s_buffer Load) s_tell Load) nil nil)\n                  None\n                )\n                (Expr\n                  (Tuple\n                    (list\n                      (Call\n                        (Attribute (Attribute (Name &self:6 Load) s_buffer Load) s_seek Load)\n                        (list (Constant i0 None) (Constant i2 None))\n                        nil\n                      )\n                      (Call\n                        (Attribute (Attribute (Name &self:6 Load) s_buffer Load) s_write Load)\n                        (list (Name &b:6 Load))\n                        nil\n                      )\n                      (Call\n                        (Attribute (Attribute (Name &self:6 Load) s_buffer Load) s_seek Load)\n                        (list (Name &ptr:6 Load))\n                        nil\n                      )\n                    )\n                    Load\n                  )\n                )\n              )\n              nil\n            )\n            (Assign (list (Attribute (Name &self:6 Load) s_newlines Store)) (Constant i0 None) None)\n            (Return (Call (Attribute (Attribute (Name &self:6 Load) s_buffer Load) s_read Load) nil nil))\n          )\n          nil\n          None\n          None\n        )\n        (FunctionDef\n          &readline:1\n          (arguments nil (list (arg &self:7 None None)) None nil nil None nil)\n          (/seq\n            (While\n              (Compare (Attribute (Name &self:7 Load) s_newlines Load) (list Eq) (list (Constant i0 None)))\n              (/seq\n                (Assign\n                  (list (Name &b:7 Store))\n                  (Call\n                    (Attribute (Name &os:0 Load) s_read Load)\n                    (list\n                      (Attribute (Name &self:7 Load) s__fd Load)\n                      (Call\n                        (Name g_max Load)\n                        (list\n                          (Attribute\n                            (Call\n                              (Attribute (Name &os:0 Load) s_fstat Load)\n                              (list (Attribute (Name &self:7 Load) s__fd Load))\n                              nil\n                            )\n                            s_st_size\n                            Load\n                          )\n                          (Name &BUFSIZE:0 Load)\n                        )\n                        nil\n                      )\n                    )\n                    nil\n                  )\n                  None\n                )\n                (Assign\n                  (list (Attribute (Name &self:7 Load) s_newlines Store))\n                  (BinOp\n                    (Call (Attribute (Name &b:7 Load) s_count Load) (list (Constant bCg== None)) nil)\n                    Add\n                    (UnaryOp Not (Name &b:7 Load))\n                  )\n                  None\n                )\n                (Assign\n                  (list (Name &ptr:7 Store))\n                  (Call (Attribute (Attribute (Name &self:7 Load) s_buffer Load) s_tell Load) nil nil)\n                  None\n                )\n                (Expr\n                  (Tuple\n                    (list\n                      (Call\n                        (Attribute (Attribute (Name &self:7 Load) s_buffer Load) s_seek Load)\n                        (list (Constant i0 None) (Constant i2 None))\n                        nil\n                      )\n                      (Call\n                        (Attribute (Attribute (Name &self:7 Load) s_buffer Load) s_write Load)\n                        (list (Name &b:7 Load))\n                        nil\n                      )\n                      (Call\n                        (Attribute (Attribute (Name &self:7 Load) s_buffer Load) s_seek Load)\n                        (list (Name &ptr:7 Load))\n                        nil\n                      )\n                    )\n                    Load\n                  )\n                )\n              )\n              nil\n            )\n            (AugAssign (Attribute (Name &self:7 Load) s_newlines Store) Sub (Constant i1 None))\n            (Return (Call (Attribute (Attribute (Name &self:7 Load) s_buffer Load) s_readline Load) nil nil))\n          )\n          nil\n          None\n          None\n        )\n        (FunctionDef\n          &flush:1\n          (arguments nil (list (arg &self:8 None None)) None nil nil None nil)\n          (/seq\n            (If\n              (Attribute (Name &self:8 Load) s_writable Load)\n              (/seq\n                (Expr\n                  (Call\n                    (Attribute (Name &os:0 Load) s_write Load)\n                    (list\n                      (Attribute (Name &self:8 Load) s__fd Load)\n                      (Call (Attribute (Attribute (Name &self:8 Load) s_buffer Load) s_getvalue Load) nil nil)\n                    )\n                    nil\n                  )\n                )\n                (Expr\n                  (Tuple\n                    (list\n                      (Call\n                        (Attribute (Attribute (Name &self:8 Load) s_buffer Load) s_truncate Load)\n                        (list (Constant i0 None))\n                        nil\n                      )\n                      (Call\n                        (Attribute (Attribute (Name &self:8 Load) s_buffer Load) s_seek Load)\n                        (list (Constant i0 None))\n                        nil\n                      )\n                    )\n                    Load\n                  )\n                )\n              )\n              nil\n            )\n          )\n          nil\n          None\n          None\n        )\n      )\n      nil\n    )\n    (ClassDef\n      &IOWrapper:0\n      (list (Name &IOBase:0 Load))\n      nil\n      (/seq\n        (FunctionDef\n          &__init__:2\n          (arguments nil (list (arg &self:9 None None) (arg &file:9 None None)) None nil nil None nil)\n          (/seq\n            (Assign\n              (list (Attribute (Name &self:9 Load) s_buffer Store))\n              (Call (Name &FastIO:0 Load) (list (Name &file:9 Load)) nil)\n              None\n            )\n            (Assign\n              (list (Attribute (Name &self:9 Load) s_flush Store))\n              (Attribute (Attribute (Name &self:9 Load) s_buffer Load) s_flush Load)\n              None\n            )\n            (Assign\n              (list (Attribute (Name &self:9 Load) s_writable Store))\n              (Attribute (Attribute (Name &self:9 Load) s_buffer Load) s_writable Load)\n              None\n            )\n            (Assign\n              (list (Attribute (Name &self:9 Load) s_write Store))\n              (Lambda\n                (arguments nil (list (arg &s:10 None None)) None nil nil None nil)\n                (Call\n                  (Attribute (Attribute (Name &self:9 Load) s_buffer Load) s_write Load)\n                  (list (Call (Attribute (Name &s:10 Load) s_encode Load) (list (Constant s_ascii None)) nil))\n                  nil\n                )\n              )\n              None\n            )\n            (Assign\n              (list (Attribute (Name &self:9 Load) s_read Store))\n              (Lambda\n                (arguments nil nil None nil nil None nil)\n                (Call\n                  (Attribute\n                    (Call (Attribute (Attribute (Name &self:9 Load) s_buffer Load) s_read Load) nil nil)\n                    s_decode\n                    Load\n                  )\n                  (list (Constant s_ascii None))\n                  nil\n                )\n              )\n              None\n            )\n            (Assign\n              (list (Attribute (Name &self:9 Load) s_readline Store))\n              (Lambda\n                (arguments nil nil None nil nil None nil)\n                (Call\n                  (Attribute\n                    (Call (Attribute (Attribute (Name &self:9 Load) s_buffer Load) s_readline Load) nil nil)\n                    s_decode\n                    Load\n                  )\n                  (list (Constant s_ascii None))\n                  nil\n                )\n              )\n              None\n            )\n          )\n          nil\n          None\n          None\n        )\n      )\n      nil\n    )\n    (Assign\n      (list\n        (Tuple (list (Attribute (Name &sys:0 Load) s_stdin Store) (Attribute (Name &sys:0 Load) s_stdout Store)) Store)\n      )\n      (Tuple\n        (list\n          (Call (Name &IOWrapper:0 Load) (list (Attribute (Name &sys:0 Load) s_stdin Load)) nil)\n          (Call (Name &IOWrapper:0 Load) (list (Attribute (Name &sys:0 Load) s_stdout Load)) nil)\n        )\n        Load\n      )\n      None\n    )\n    (Assign\n      (list (Name &input:0 Store))\n      (Lambda\n        (arguments nil nil None nil nil None nil)\n        (Call\n          (Attribute\n            (Call (Attribute (Attribute (Name &sys:0 Load) s_stdin Load) s_readline Load) nil nil)\n            s_rstrip\n            Load\n          )\n          (list (Constant s-WzEzLCAxMF0= None))\n          nil\n        )\n      )\n      None\n    )\n    (If\n      (Compare (Name g___name__ Load) (list Eq) (list (Constant s___main__ None)))\n      (/seq (Expr (Call (Name &main:0 Load) nil nil)))\n      nil\n    )\n  )\n  nil\n)", "(Module\n  (/seq\n    (Import (list (alias g_math None)))\n    (Assign\n      (list (Tuple (list (Name &n:0 Store) (Name &x:0 Store) (Name &y:0 Store)) Store))\n      (Call\n        (Name g_map Load)\n        (list (Name g_int Load) (Call (Attribute (Call (Name g_input Load) nil nil) s_split Load) nil nil))\n        nil\n      )\n      None\n    )\n    (Assign\n      (list (Name &d:0 Store))\n      (Call\n        (Attribute (Name g_math Load) s_ceil Load)\n        (list (BinOp (BinOp (Name &y:0 Load) Div (Constant i100 None)) Mult (Name &n:0 Load)))\n        nil\n      )\n      None\n    )\n    (If\n      (Compare (Call (Name g_int Load) (list (Name &d:0 Load)) nil) (list Gt) (list (Name &x:0 Load)))\n      (/seq\n        (Expr\n          (Call\n            (Name g_print Load)\n            (list (BinOp (Call (Name g_int Load) (list (Name &d:0 Load)) nil) Sub (Name &x:0 Load)))\n            nil\n          )\n        )\n      )\n      (/seq\n        (If\n          (Compare (Call (Name g_int Load) (list (Name &d:0 Load)) nil) (list LtE) (list (Name &x:0 Load)))\n          (/seq (Expr (Call (Name g_print Load) (list (Constant i0 None)) nil)))\n          nil\n        )\n      )\n    )\n  )\n  nil\n)", "(Module\n  (/seq\n    (ImportFrom s_math (list (alias g_ceil None)) i0)\n    (Assign\n      (list (Tuple (list (Name &n:0 Store) (Name &x:0 Store) (Name &y:0 Store)) Store))\n      (Call\n        (Name g_list Load)\n        (list\n          (Call\n            (Name g_map Load)\n            (list\n              (Name g_int Load)\n              (Call (Attribute (Call (Name g_input Load) nil nil) s_split Load) (list (Constant s-WzMyXQ== None)) nil)\n            )\n            nil\n          )\n        )\n        nil\n      )\n      None\n    )\n    (Expr\n      (Call\n        (Name g_print Load)\n        (list\n          (IfExp\n            (Compare\n              (BinOp\n                (Call\n                  (Name g_ceil Load)\n                  (list (BinOp (BinOp (Name &n:0 Load) Mult (Name &y:0 Load)) Div (Constant i100 None)))\n                  nil\n                )\n                Sub\n                (Name &x:0 Load)\n              )\n              (list Gt)\n              (list (Constant i0 None))\n            )\n            (BinOp\n              (Call\n                (Name g_ceil Load)\n                (list (BinOp (BinOp (Name &n:0 Load) Mult (Name &y:0 Load)) Div (Constant i100 None)))\n                nil\n              )\n              Sub\n              (Name &x:0 Load)\n            )\n            (Constant i0 None)\n          )\n        )\n        nil\n      )\n    )\n  )\n  nil\n)", "(Module\n  (/seq\n    (Import (list (alias g_math None)))\n    (Assign\n      (list (Tuple (list (Name &n:0 Store) (Name &x:0 Store) (Name &y:0 Store)) Store))\n      (Call\n        (Name g_map Load)\n        (list (Name g_int Load) (Call (Attribute (Call (Name g_input Load) nil nil) s_split Load) nil nil))\n        nil\n      )\n      None\n    )\n    (Expr\n      (Call\n        (Name g_print Load)\n        (list\n          (Call\n            (Name g_max Load)\n            (list\n              (BinOp\n                (Call\n                  (Attribute (Name g_math Load) s_ceil Load)\n                  (list (BinOp (BinOp (Name &n:0 Load) Mult (Name &y:0 Load)) Div (Constant i100 None)))\n                  nil\n                )\n                Sub\n                (Name &x:0 Load)\n              )\n              (Constant i0 None)\n            )\n            nil\n          )\n        )\n        nil\n      )\n    )\n  )\n  nil\n)", "(Module\n  (/seq\n    (Import (list (alias g_math None)))\n    (Assign\n      (list (Tuple (list (Name &a:0 Store) (Name &b:0 Store) (Name &c:0 Store)) Store))\n      (Call\n        (Name g_map Load)\n        (list (Name g_int Load) (Call (Attribute (Call (Name g_input Load) nil nil) s_split Load) nil nil))\n        nil\n      )\n      None\n    )\n    (Expr\n      (Call\n        (Name g_print Load)\n        (list\n          (IfExp\n            (Compare\n              (Call\n                (Attribute (Name g_math Load) s_ceil Load)\n                (list\n                  (BinOp\n                    (BinOp (BinOp (Name &a:0 Load) Mult (Name &c:0 Load)) Div (Constant i100 None))\n                    Sub\n                    (Name &b:0 Load)\n                  )\n                )\n                nil\n              )\n              (list Gt)\n              (list (Constant i0 None))\n            )\n            (Call\n              (Attribute (Name g_math Load) s_ceil Load)\n              (list\n                (BinOp\n                  (BinOp (BinOp (Name &a:0 Load) Mult (Name &c:0 Load)) Div (Constant i100 None))\n                  Sub\n                  (Name &b:0 Load)\n                )\n              )\n              nil\n            )\n            (Constant i0 None)\n          )\n        )\n        nil\n      )\n    )\n  )\n  nil\n)"]