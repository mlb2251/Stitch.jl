{
  "M": {
    "Module": [
      "seqS",
      "X"
    ],
    "list": [
      "M"
    ],
    "/seq": [
      "X"
    ],
    "/splice": [
      "X"
    ]
  },
  "S": {
    "AnnAssign": [
      "L",
      "E",
      "E",
      "X"
    ],
    "Assert": [
      "E",
      "E"
    ],
    "Assign": [
      "L",
      "E",
      "X"
    ],
    "AsyncFor": [
      "L",
      "E",
      "seqS",
      "seqS",
      "X"
    ],
    "AsyncFunctionDef": [
      "X",
      "As",
      "seqS",
      "listE",
      "E",
      "X"
    ],
    "AsyncWith": [
      "W",
      "seqS",
      "X"
    ],
    "AugAssign": [
      "L",
      "X",
      "E"
    ],
    "ClassDef": [
      "X",
      "listE",
      "K",
      "seqS",
      "listE"
    ],
    "Delete": [
      "L"
    ],
    "Expr": [
      "E"
    ],
    "For": [
      "L",
      "E",
      "seqS",
      "seqS",
      "X"
    ],
    "FunctionDef": [
      "X",
      "As",
      "seqS",
      "listE",
      "E",
      "X"
    ],
    "Global": [
      "names"
    ],
    "If": [
      "E",
      "seqS",
      "seqS"
    ],
    "Import": [
      "alias"
    ],
    "ImportFrom": [
      "X",
      "alias",
      "X"
    ],
    "Nonlocal": [
      "names"
    ],
    "Raise": [
      "E",
      "E"
    ],
    "Return": [
      "E"
    ],
    "Try": [
      "seqS",
      "EH",
      "seqS",
      "seqS"
    ],
    "While": [
      "E",
      "seqS",
      "seqS"
    ],
    "With": [
      "W",
      "seqS",
      "X"
    ],
    "list": [
      "S"
    ],
    "/seq": [
      "X"
    ],
    "/splice": [
      "seqS"
    ]
  },
  "E": {
    "AnnAssign": [
      "X",
      "X",
      "X",
      "X"
    ],
    "Attribute": [
      "E",
      "X",
      "X"
    ],
    "Await": [
      "E"
    ],
    "BinOp": [
      "E",
      "O",
      "E"
    ],
    "BoolOp": [
      "O",
      "listE"
    ],
    "Call": [
      "E",
      "listE_starrable",
      "K"
    ],
    "Compare": [
      "E",
      "O",
      "listE"
    ],
    "Constant": [
      "X",
      "X"
    ],
    "Dict": [
      "listE",
      "listE"
    ],
    "DictComp": [
      "E",
      "E",
      "C"
    ],
    "GeneratorExp": [
      "E",
      "C"
    ],
    "IfExp": [
      "E",
      "E",
      "E"
    ],
    "JoinedStr": [
      "listF"
    ],
    "Lambda": [
      "As",
      "E"
    ],
    "List": [
      "listE_starrable",
      "X"
    ],
    "ListComp": [
      "E",
      "C"
    ],
    "Name": [
      "X",
      "X"
    ],
    "NamedExpr": [
      "L",
      "E"
    ],
    "Set": [
      "listE_starrable"
    ],
    "SetComp": [
      "E",
      "C"
    ],
    "Starred": [
      "E",
      "X"
    ],
    "Subscript": [
      "E",
      "SliceRoot",
      "X"
    ],
    "Tuple": [
      "listE_starrable",
      "X"
    ],
    "UnaryOp": [
      "O",
      "E"
    ],
    "Yield": [
      "E"
    ],
    "YieldFrom": [
      "E"
    ],
    "list": [
      "E"
    ],
    "/seq": [
      "X"
    ],
    "/splice": [
      "X"
    ]
  },
  "SliceRoot": {
    "_slice_content": [
      "E"
    ],
    "_slice_slice": [
      "Slice"
    ],
    "_slice_tuple": [
      "SliceTuple"
    ],
    "list": [
      "SliceRoot"
    ],
    "/seq": [
      "X"
    ],
    "/splice": [
      "X"
    ]
  },
  "SliceTuple": {
    "Tuple": [
      "listSliceRoot",
      "X"
    ],
    "list": [
      "SliceTuple"
    ],
    "/seq": [
      "X"
    ],
    "/splice": [
      "X"
    ]
  },
  "listSliceRoot": {
    "list": [
      "SliceRoot"
    ],
    "/seq": [
      "X"
    ],
    "/splice": [
      "X"
    ]
  },
  "StarredRoot": {
    "_starred_content": [
      "E"
    ],
    "_starred_starred": [
      "Starred"
    ],
    "list": [
      "StarredRoot"
    ],
    "/seq": [
      "X"
    ],
    "/splice": [
      "X"
    ]
  },
  "Starred": {
    "Starred": [
      "E",
      "X"
    ],
    "list": [
      "Starred"
    ],
    "/seq": [
      "X"
    ],
    "/splice": [
      "X"
    ]
  },
  "Slice": {
    "Slice": [
      "E",
      "E",
      "E"
    ],
    "list": [
      "Slice"
    ],
    "/seq": [
      "X"
    ],
    "/splice": [
      "X"
    ]
  },
  "As": {
    "arguments": [
      "A",
      "A",
      "A",
      "A",
      "listE",
      "A",
      "listE"
    ],
    "list": [
      "As"
    ],
    "/seq": [
      "X"
    ],
    "/splice": [
      "X"
    ]
  },
  "A": {
    "arg": [
      "X",
      "E",
      "X"
    ],
    "list": [
      "A"
    ],
    "/seq": [
      "X"
    ],
    "/splice": [
      "X"
    ]
  },
  "X": {
    "AST": [],
    "Add": [],
    "And": [],
    "AnnAssign": [
      "X",
      "X",
      "X",
      "X"
    ],
    "Assert": [
      "X",
      "X"
    ],
    "Assign": [
      "X",
      "X",
      "X"
    ],
    "AsyncFor": [
      "X",
      "X",
      "X",
      "X",
      "X"
    ],
    "AsyncFunctionDef": [
      "X",
      "X",
      "X",
      "X",
      "X",
      "X"
    ],
    "AsyncWith": [
      "X",
      "X",
      "X"
    ],
    "Attribute": [
      "X",
      "X",
      "X"
    ],
    "AugAssign": [
      "X",
      "X",
      "X"
    ],
    "AugLoad": [],
    "AugStore": [],
    "Await": [
      "X"
    ],
    "BinOp": [
      "X",
      "X",
      "X"
    ],
    "BitAnd": [],
    "BitOr": [],
    "BitXor": [],
    "BoolOp": [
      "X",
      "X"
    ],
    "Break": [],
    "Bytes": [
      "X"
    ],
    "Call": [
      "X",
      "X",
      "X"
    ],
    "ClassDef": [
      "X",
      "X",
      "X",
      "X",
      "X"
    ],
    "Compare": [
      "X",
      "X",
      "X"
    ],
    "Constant": [
      "X",
      "X"
    ],
    "Continue": [],
    "Del": [],
    "Delete": [
      "X"
    ],
    "Dict": [
      "X",
      "X"
    ],
    "DictComp": [
      "X",
      "X",
      "X"
    ],
    "Div": [],
    "Ellipsis": [],
    "Eq": [],
    "ExceptHandler": [
      "X",
      "X",
      "X"
    ],
    "Expr": [
      "X"
    ],
    "Expression": [
      "X"
    ],
    "ExtSlice": [],
    "FloorDiv": [],
    "For": [
      "X",
      "X",
      "X",
      "X",
      "X"
    ],
    "FormattedValue": [
      "X",
      "X",
      "X"
    ],
    "FunctionDef": [
      "X",
      "X",
      "X",
      "X",
      "X",
      "X"
    ],
    "FunctionType": [
      "X",
      "X"
    ],
    "GeneratorExp": [
      "X",
      "X"
    ],
    "Global": [
      "X"
    ],
    "Gt": [],
    "GtE": [],
    "If": [
      "X",
      "X",
      "X"
    ],
    "IfExp": [
      "X",
      "X",
      "X"
    ],
    "Import": [
      "X"
    ],
    "ImportFrom": [
      "X",
      "X",
      "X"
    ],
    "In": [],
    "Index": [],
    "Interactive": [
      "X"
    ],
    "Invert": [],
    "Is": [],
    "IsNot": [],
    "JoinedStr": [
      "X"
    ],
    "LShift": [],
    "Lambda": [
      "X",
      "X"
    ],
    "List": [
      "X",
      "X"
    ],
    "ListComp": [
      "X",
      "X"
    ],
    "Load": [],
    "Lt": [],
    "LtE": [],
    "MatMult": [],
    "Match": [
      "X",
      "X"
    ],
    "MatchAs": [
      "X",
      "X"
    ],
    "MatchClass": [
      "X",
      "X",
      "X",
      "X"
    ],
    "MatchMapping": [
      "X",
      "X",
      "X"
    ],
    "MatchOr": [
      "X"
    ],
    "MatchSequence": [
      "X"
    ],
    "MatchSingleton": [
      "X"
    ],
    "MatchStar": [
      "X"
    ],
    "MatchValue": [
      "X"
    ],
    "Mod": [],
    "Module": [
      "X",
      "X"
    ],
    "Mult": [],
    "Name": [
      "X",
      "X"
    ],
    "NameConstant": [
      "X",
      "X"
    ],
    "NamedExpr": [
      "X",
      "X"
    ],
    "Nonlocal": [
      "X"
    ],
    "Not": [],
    "NotEq": [],
    "NotIn": [],
    "Num": [
      "X"
    ],
    "Or": [],
    "Param": [],
    "Pass": [],
    "Pow": [],
    "RShift": [],
    "Raise": [
      "X",
      "X"
    ],
    "Return": [
      "X"
    ],
    "Set": [
      "X"
    ],
    "SetComp": [
      "X",
      "X"
    ],
    "Slice": [
      "X",
      "X",
      "X"
    ],
    "Starred": [
      "X",
      "X"
    ],
    "Store": [],
    "Str": [
      "X"
    ],
    "Sub": [],
    "Subscript": [
      "X",
      "X",
      "X"
    ],
    "Suite": [],
    "Try": [
      "X",
      "X",
      "X",
      "X"
    ],
    "TryStar": [
      "X",
      "X",
      "X",
      "X"
    ],
    "Tuple": [
      "X",
      "X"
    ],
    "TypeIgnore": [
      "X",
      "X"
    ],
    "UAdd": [],
    "USub": [],
    "UnaryOp": [
      "X",
      "X"
    ],
    "While": [
      "X",
      "X",
      "X"
    ],
    "With": [
      "X",
      "X",
      "X"
    ],
    "Yield": [
      "X"
    ],
    "YieldFrom": [
      "X"
    ],
    "alias": [
      "X",
      "X"
    ],
    "arg": [
      "X",
      "X",
      "X"
    ],
    "arguments": [
      "X",
      "X",
      "X",
      "X",
      "X",
      "X",
      "X"
    ],
    "boolop": [],
    "cmpop": [],
    "comprehension": [
      "X",
      "X",
      "X",
      "X"
    ],
    "excepthandler": [],
    "expr": [],
    "expr_context": [],
    "keyword": [
      "X",
      "X"
    ],
    "match_case": [
      "X",
      "X",
      "X"
    ],
    "mod": [],
    "operator": [],
    "pattern": [],
    "slice": [],
    "stmt": [],
    "type_ignore": [],
    "unaryop": [],
    "withitem": [
      "X",
      "X"
    ],
    "_slice_content": [
      "X"
    ],
    "_slice_slice": [
      "X"
    ],
    "_slice_tuple": [
      "X"
    ],
    "_starred_content": [
      "X"
    ],
    "_starred_starred": [
      "X"
    ],
    "list": [
      "X"
    ],
    "/seq": [
      "X"
    ],
    "/splice": [
      "X"
    ]
  },
  "F": {
    "Constant": [
      "F",
      "F"
    ],
    "FormattedValue": [
      "E",
      "X",
      "F"
    ],
    "JoinedStr": [
      "listF"
    ],
    "list": [
      "F"
    ],
    "/seq": [
      "X"
    ],
    "/splice": [
      "X"
    ]
  },
  "C": {
    "comprehension": [
      "L",
      "E",
      "listE",
      "X"
    ],
    "list": [
      "C"
    ],
    "/seq": [
      "X"
    ],
    "/splice": [
      "X"
    ]
  },
  "K": {
    "keyword": [
      "X",
      "E"
    ],
    "list": [
      "K"
    ],
    "/seq": [
      "X"
    ],
    "/splice": [
      "X"
    ]
  },
  "EH": {
    "ExceptHandler": [
      "E",
      "X",
      "seqS"
    ],
    "list": [
      "EH"
    ],
    "/seq": [
      "X"
    ],
    "/splice": [
      "X"
    ]
  },
  "W": {
    "withitem": [
      "E",
      "L"
    ],
    "list": [
      "W"
    ],
    "/seq": [
      "X"
    ],
    "/splice": [
      "X"
    ]
  },
  "L": {
    "Attribute": [
      "E",
      "X",
      "X"
    ],
    "List": [
      "L",
      "L"
    ],
    "Name": [
      "X",
      "X"
    ],
    "Starred": [
      "L",
      "L"
    ],
    "Subscript": [
      "E",
      "SliceRoot",
      "X"
    ],
    "Tuple": [
      "L",
      "L"
    ],
    "_starred_content": [
      "L"
    ],
    "_starred_starred": [
      "Starred"
    ],
    "list": [
      "L"
    ],
    "/seq": [
      "X"
    ],
    "/splice": [
      "X"
    ]
  },
  "seqS": {
    "list": [
      "seqS"
    ],
    "/seq": [
      "S"
    ],
    "/splice": [
      "X"
    ]
  },
  "listE": {
    "list": [
      "E"
    ],
    "/seq": [
      "X"
    ],
    "/splice": [
      "X"
    ]
  },
  "listE_starrable": {
    "list": [
      "StarredRoot"
    ],
    "/seq": [
      "X"
    ],
    "/splice": [
      "X"
    ]
  },
  "O": {
    "list": [
      "O"
    ],
    "/seq": [
      "X"
    ],
    "/splice": [
      "X"
    ]
  },
  "alias": {
    "alias": [
      "X",
      "X"
    ],
    "list": [
      "alias"
    ],
    "/seq": [
      "X"
    ],
    "/splice": [
      "X"
    ]
  },
  "names": {
    "list": [
      "X"
    ],
    "/seq": [
      "X"
    ],
    "/splice": [
      "X"
    ]
  },
  "listF": {
    "list": [
      "F"
    ],
    "/seq": [
      "X"
    ],
    "/splice": [
      "X"
    ]
  }
}
